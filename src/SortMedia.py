###############################################################################################################################################
############################################## Импортируем необходимые модули и данные ########################################################
###############################################################################################################################################

# Для работы с операционной сисемой 
import os

###############################################################################################################################################
############################################## Создаем объект класса ##########################################################################
###############################################################################################################################################

class SortMedia(): 
    def __init__(
        self,
        type_file = ('.jpg', '.png', '.mp4')
        ,path_list = ['/camera_vvy', 'camera_angel']
    ):
        """
        Сортировка медиафайлов с найденным лицом искомого человека по папкам. 
        Вход: 
            type_file(list) - список типов файлов.
            path_list(list) - список путей к файлам. 
        """
        self.type_file = type_file
        self.path_list = path_list

    def get_files(self):
        """
        Получение путей к медиафайлам. 
        Вход: 
            path_list(list) - лист путей к папкам, в которых необходимо получить список файлов. 
        Выход: 
            result(list) - список путей к файлам. 
        """
        files_list = []
        for path in self.path_list: 
            for dirpath, subdirs, files in os.walk(path):
                files_list.extend(os.path.join(dirpath, x) for x in files if x.endswith(self.type_file))
        result = files_list if files_list else None        
        return result
        